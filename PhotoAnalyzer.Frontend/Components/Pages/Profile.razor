@page "/profile"
@inject UsersClient Client

<PageTitle>Profile</PageTitle>

<div class="profile-container">
    @if (_isLoading)
    {
        <div class="d-flex justify-content-center align-items-center" style="height: 80vh;">
            <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (!string.IsNullOrEmpty(_errorMessage))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @_errorMessage
            <button type="button" class="btn-close" @onclick="() => _errorMessage = null"></button>
        </div>
    }
    else if (_user != null)
    {
        <div class="profile-card">
            <div class="profile-header">
                <div class="profile-picture-container">
                    @if (!string.IsNullOrEmpty(_profilePictureUrl))
                    {
                        <img src="@_profilePictureUrl" class="profile-picture" alt="Profile Picture"/>
                    }
                    else
                    {
                        <div class="profile-picture-placeholder">
                            <i class="fas fa-user"></i>
                        </div>
                    }
                </div>
                <h1 class="profile-name">@_user.DisplayName</h1>
                <p class="profile-title">@_user.JobTitle</p>
            </div>

            <div class="profile-details">
                <div class="detail-item">
                    <i class="fas fa-envelope"></i>
                    <div>
                        <span class="detail-label">Email</span>
                        <span class="detail-value">@_user.Mail</span>
                    </div>
                </div>

                <div class="detail-item">
                    <i class="fas fa-phone"></i>
                    <div>
                        <span class="detail-label">Phone</span>
                        <span class="detail-value">@_user.MobilePhone</span>
                    </div>
                </div>

                <div class="detail-item">
                    <i class="fas fa-id-card"></i>
                    <div>
                        <span class="detail-label">Username</span>
                        <span class="detail-value">@_user.UserPrincipalName</span>
                    </div>
                </div>
            </div>


        </div>
    }
    else
    {
        <div class="empty-profile">
            <i class="fas fa-user-slash"></i>
            <h3>No user data available</h3>
            <button class="btn btn-primary mt-3" @onclick="ReloadProfile">
                <i class="fas fa-sync-alt"></i> Try Again
            </button>
        </div>
    }
</div>

@code {
    private User? _user;
    private string? _errorMessage;
    private bool _isLoading = true;
    private string? _profilePictureUrl;

    protected override async Task OnInitializedAsync()
    {
        await LoadProfileData();
    }

    private async Task LoadProfileData()
    {
        try
        {
            _isLoading = true;
            _user = await Client.GetUserMeAsync();

            if (_user?.Id != null)
            {
                _profilePictureUrl = await Client.GetProfilePictureAsync(_user.Id);
            }
        }
        catch (Exception ex)
        {
            _errorMessage = ex.Message;
        }
        finally
        {
            _isLoading = false;
            StateHasChanged();
        }
    }

    private async Task ReloadProfile()
    {
        await LoadProfileData();
    }

}

<style>
    .profile-container {
        max-width: 800px;
        margin: 2rem auto;
        padding: 0 1rem;
    }

    .profile-card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        overflow: hidden;
    }

    .profile-header {
        background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
        color: white;
        padding: 2rem;
        text-align: center;
        position: relative;
    }

    .profile-picture-container {
        margin: 0 auto 1rem;
        width: 150px;
        height: 150px;
        border-radius: 50%;
        border: 4px solid white;
        overflow: hidden;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
    }

    .profile-picture {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .profile-picture-placeholder {
        width: 100%;
        height: 100%;
        background: rgba(255, 255, 255, 0.2);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 4rem;
        color: white;
    }

    .profile-name {
        font-size: 2rem;
        margin: 0.5rem 0;
        font-weight: 600;
    }

    .profile-title {
        font-size: 1.1rem;
        opacity: 0.9;
        margin: 0;
    }

    .profile-details {
        padding: 2rem;
    }

    .detail-item {
        display: flex;
        align-items: center;
        padding: 1rem 0;
        border-bottom: 1px solid #eee;
    }

    .detail-item:last-child {
        border-bottom: none;
    }

    .detail-item i {
        font-size: 1.5rem;
        color: #6a11cb;
        margin-right: 1.5rem;
        width: 30px;
        text-align: center;
    }

    .detail-label {
        display: block;
        font-size: 0.8rem;
        color: #666;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .detail-value {
        display: block;
        font-size: 1.1rem;
        color: #333;
        margin-top: 0.2rem;
    }

    .empty-profile {
        text-align: center;
        padding: 4rem 0;
    }

    .empty-profile i {
        font-size: 5rem;
        color: #ccc;
        margin-bottom: 1rem;
    }

    .empty-profile h3 {
        color: #666;
    }

    @@media (max-width: 576px) {
        .profile-picture-container {
            width: 120px;
            height: 120px;
        }

        .profile-name {
            font-size: 1.5rem;
        }
    }
</style>